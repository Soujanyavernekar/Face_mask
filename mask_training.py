# -*- coding: utf-8 -*-
"""face_mask

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_tZ4kyh2ziEh_FwuzXinaPS2fzn4OHIS
"""

from google.colab import drive
drive.mount('/content/drive')

import cv2
loc1 = '/content/drive/My Drive/with mask'
loc2 = '/content/drive/My Drive/without mask'

import os
import cv2
import keras
from keras import layers
from keras.utils import to_categorical

label = []
#with mask
for i in os.listdir(loc1):
   label.append(0)
#without mask
for i in os.listdir(loc2):
   label.append(1)

from tqdm import tqdm
features = []
for i in tqdm(os.listdir(loc1)):
  f1 = cv2.imread(os.path.join(loc1,i))
  fr1 = cv2.resize(f1,(200,200))
  features.append(fr1)
    
for i in tqdm(os.listdir(loc2)):
  f2 = cv2.imread(os.path.join(loc2,i))
  fr2 = cv2.resize(f2,(200,200))
  features.append(fr2)

import numpy as np
X = np.array(features)
Y = np.array(label)

X.shape

Y.shape

Xt = X.reshape(1376,120000)
Xt = Xt/Xt.max()
Xt.shape

Yt = to_categorical(Y)
Yt

model = keras.Sequential()
model.add(layers.Dense(400, activation = 'relu' , input_dim = Xt.shape[1]))
model.add(layers.Dense(300 , activation = 'relu'))
model.add(layers.Dense(200 , activation = 'relu'))
model.add(layers.Dense(200 , activation = 'relu'))
model.add(layers.Dense(100 , activation = 'relu'))
#model.add(layers.Dense(100 , activation = 'relu'))
model.add(layers.Dense(10 , activation = 'relu'))
model.add(layers.Dense(2, activation = 'softmax'))

model.compile(optimizer='sgd', loss='categorical_crossentropy',
              metrics = ['accuracy'])

from sklearn.model_selection import train_test_split
xtrain,xtest,ytrain,ytest = train_test_split(Xt,Yt,test_size=0.2)

model.fit(xtrain,ytrain,epochs=40)

model.evaluate(xtest,ytest)

xtest.shape

p = ['without mask','without mask']

import matplotlib.pyplot as plt

k = cv2.imread('img.jpg')
k = cv2.cvtColor(k,cv2.COLOR_BGR2RGB)
kt = cv2.resize(k,(200,200))
plt.imshow(kt)
plt.show()
print(p[np.argmax(model.predict(kt.reshape(1,120000)))])



model.save('mymodel.h5')

